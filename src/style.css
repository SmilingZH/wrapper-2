* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

:root {
  --index: calc(1vw + 1vh);
  --transition: cubic-bezier(.1, .7, 0, 1);
}

body {
  background-color: #141414;
  margin: 0;
  min-width: 320px;
  min-height: 100vh;
}

.wrapper {
  display: flex;
  align-items: center;
  justify-content: center;
  height: 50vw;
  transform: rotate(-90deg) translate(-100vw, 0);
  transform-origin: top left;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  transition: transform 0.5s ease;
}

.items {
  display: flex;
  gap: 0.4rem;
  perspective: calc(var(--index) * 35);
}

.item {
  border-radius: 1vw;
  width: calc(var(--index) * 3);
  height: calc(var(--index) * 12);
  background-color: #222;
  background-size: cover;
  background-position: center;
  cursor: pointer;
  filter: grayscale(1) brightness(.5);
  transition: transform 1.25s var(--transition), filter 3s var(--transition), width 1.25s var(--transition);
  will-change: transform, filter, rotateY, width;
  position: relative;
}

.item::before,
.item::after {
  content: '';
  position: absolute;
  height: 100%;
  width: 20px;
  right: calc(var(--index) * -1);
}

.item::after {
  left: calc(var(--index) * -1);
}

.items .item:hover {
  filter: inherit;
  transform: translateZ(calc(var(--index) * 10));
}

.items .item:hover + * {
  filter: inherit;
  transform: translateZ(calc(var(--index) * 8.5)) rotateY(35deg);
  z-index: -1;
}

.items .item:hover + * + * {
  filter: inherit;
  transform: translateZ(calc(var(--index) * 5.6)) rotateY(40deg);
  z-index: -2;
}

.items .item:hover + * + * + * {
  filter: inherit;
  transform: translateZ(calc(var(--index) * 2.5)) rotateY(30deg);
  z-index: -3;
}

.items .item:hover + * + * + * + * {
  filter: inherit;
  transform: translateZ(calc(var(--index) * .6)) rotateY(15deg);
  z-index: -4;
}

.items .item:has(+ :hover) {
  filter: inherit;
  transform: translateZ(calc(var(--index) * 8.5)) rotateY(-35deg);
}

.items .item:has(+ * + :hover) {
  filter: inherit;
  transform: translateZ(calc(var(--index) * 5.6)) rotateY(-40deg);
}

.items .item:has(+ * + * + :hover) {
  filter: inherit;
  transform: translateZ(calc(var(--index) * 2.5)) rotateY(-30deg);
}

.items .item:has(+ * + * + * + :hover) {
  filter: inherit;
  transform: translateZ(calc(var(--index) * .6)) rotateY(-15deg);
}

.items .item:active,
.items .item:focus {
  width: 28vw;
  filter: inherit;
  z-index: 100;
  transform: translateZ(calc(var(--index) * 10));
  margin: 0 .45vw;
  border-radius: 1vw;
}

.landscape-prompt {
  border-radius: 10px;
  padding-left: 10px;
  padding-right: 10px;
  position: absolute;
  top: 10px;
  left: 10px;
  color: rgb(0, 0, 0);
  font-size: 16px;
  z-index: 1000;
}

.prompt-text {
  position: absolute;
  top: 5%;
  left: 50%;
  transform: translateX(-50%);
  color: white;
  font-size: 8px;
  z-index: 1000;
  text-align: center;
}

@media (max-width: 768px) {
  .wrapper {
    transform: rotate(90deg) translate(-50%, -50%);
  }
}

@media (max-width: 425px) {
  .wrapper {
    transform: rotate(90deg) translate(-50%, -50%);
  }
  .prompt-text {
    display: none;
  }
}

@media (max-width: 320px) {
  .wrapper {
    transform: rotate(90deg) translate(-50%, -50%);
  }
  .prompt-text {
    display: none;
  }
}